language: python
sudo: true
dist: bionic
services:
  - docker
cache: pip
before_cache:
  - chown -R travis:travis $HOME/.cache/pip
stages:
  - style
  - test
  - bump-version
  - deploy
before_install:
  - env
_no_version_bump_commit: &_no_version_bump_commit
  - commit_message !~ /^Bump version/
_install: &_install
  - pip install --upgrade pip cython coverage[toml] codecov pytest ipython
  - pip install -r requirements.txt
  - if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
  - pip install .
  - find . -wholename "*/tests/*" -type d -exec chmod 555 {} \;
_coverage: &_coverage
  - coverage run --concurrency=multiprocessing -m pytest .
  - travis_retry coverage combine
_is_version_bump_commit: &_is_version_bump_commit
  - branch == master AND type != pull_request AND commit_message !~ /^Bump version/
_is_tag_commit: &_is_tag_commit
  - tag =~ .*
matrix:
  fast_finish: true
  include:
    - stage: style
      name: Check code style on python 3.8
      if: *_no_version_bump_commit
      python: 3.8
      install:
        - pip install -r requirements-lint.txt
      script:
        - make check
    - stage: test
      name: Run tests on python 3.7
      if: *_no_version_bump_commit
      python: 3.7
      install: *_install
      script: *_coverage
    - stage: test
      name: Run tests on python 3.8
      if: *_no_version_bump_commit
      python: 3.8
      install: *_install
      script: *_coverage
      after_success:
        - codecov
    - stage: bump-version
      name: Bump version
      if: *_is_version_bump_commit
      python: 3.6
      install:
        - git config --global user.name "fragile-bot"
        - git config --global user.email "bot@fragile.tech"
        - pip install bump2version
      script:
        - set -e
        - git pull --no-edit origin master
        - version_file=judo/version.py
        - current_version=$(grep __version__ $version_file | cut -d\" -f2)
        - bumpversion --tag --current-version $current_version --commit patch $version_file
        - git remote add fragile-bot-remote https://fragile-bot:${GITHUB_TOKEN}@github.com/$TRAVIS_REPO_SLUG
        - git push --tags fragile-bot-remote HEAD:master
        - set +e
    - stage: deploy
      name: Pypi deploy
      if: *_is_tag_commit
      install:
        - pip install --upgrade pip
        - pip install twine pyopenssl
      deploy:
        provider: script
        script: twine upload dist/*.whl -u $PYPI_LOGIN -p $PYPI_PASS
        skip_cleanup: true
        on:
          tags: true
      script:
        - set -e
        - test "v$(python3 setup.py --version)" == "$TRAVIS_TAG"
        - python3 setup.py bdist_wheel
        - set +e
notifications:
  email: false